name: Build and Deploy Session Manager

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: first-cedar-470107-j2
  GAR_HOSTNAME: asia-south1-docker.pkg.dev
  IMAGE_REPOSITORY: session-manager
  IMAGE_NAME: session-manager
  DEPLOYMENT_NAME: session-manager
  # Set these to your cluster
  GKE_CLUSTER: session-bubble-cluster-1
  GKE_LOCATION: asia-south1

permissions:
  contents: read
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Authenticate to Google Cloud via Workload Identity Federation (keyless)
      - name: Authenticate to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_WIF_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure gcloud project
        run: gcloud config set project "$PROJECT_ID"

      - name: Configure Docker auth for GAR
        run: gcloud auth configure-docker $GAR_HOSTNAME --quiet

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_LOCATION }}

      - name: Build and Push Docker Image
        run: |
          IMAGE_SHA="${GAR_HOSTNAME}/${PROJECT_ID}/${IMAGE_REPOSITORY}/${IMAGE_NAME}:${GITHUB_SHA}"
          IMAGE_VER="${GAR_HOSTNAME}/${PROJECT_ID}/${IMAGE_REPOSITORY}/${IMAGE_NAME}:v2.0-webrtc"
          docker build -t "$IMAGE_SHA" -t "$IMAGE_VER" .
          docker push "$IMAGE_SHA"
          docker push "$IMAGE_VER"

      - name: Create/Update LiveKit credentials secret
        run: |
          kubectl create secret generic livekit-credentials \
            --from-literal=LIVEKIT_URL='${{ secrets.LIVEKIT_URL }}' \
            --from-literal=LIVEKIT_API_KEY='${{ secrets.LIVEKIT_API_KEY }}' \
            --from-literal=LIVEKIT_API_SECRET='${{ secrets.LIVEKIT_API_SECRET }}' \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy Session Manager to GKE
        run: |
          IMAGE_PATH_VER="${GAR_HOSTNAME}/${PROJECT_ID}/${IMAGE_REPOSITORY}/${IMAGE_NAME}:v2.0-webrtc"
          # Apply RBAC and service/deployment
          kubectl apply -f k8s/permissions.yaml
          # Apply BackendConfig used by the service
          kubectl apply -f k8s/backend-config.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/deployment.yaml
          # Set the manager's own image
          kubectl set image deployment/${DEPLOYMENT_NAME} manager="${IMAGE_PATH_VER}"
          # Apply shared ingress/cert managed by the session-manager
          kubectl apply -f k8s/managed-certificate.yaml
          kubectl apply -f k8s/ingress.yaml
          kubectl rollout status deployment/${DEPLOYMENT_NAME}
